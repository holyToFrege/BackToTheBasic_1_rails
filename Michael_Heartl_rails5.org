#+TITLE: Michael Heartl rails 5강의
#+AUTHOR: Holy Frege
#+DESCRIPTION: Org-HTML export made simple.
#+KEYWORDS:  org-mode, export, html, theme, style, css, js, bigblow
#+LANGUAGE:  en
#+OPTIONS:   H:4 toc:t num:2
#+MACRO: color @@html:<font color=></font>@@
#+PROPERTY:  header-args :padline no
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+LATEX_HEADER: \usepackage{kotex}
#+latex_header: \hypersetup{colorlinks=true}
* Chapter1 (Hello World)
** rails new hello
#+begin_note
bundle install을 내부적으로 수행한다. Gemfiles를 볼 줄 알아야 한다.
ex) ~>2.03 (>= 2.03, < 2.10)
      ~>2.1 (>=2.1 , < 3.0)
      ~>0 (>=0.0 , < 1.0)
      
#+end_note
** controller 수정(C-c r c)
#+begin_note
protect_from_forery with: :exception
def hello
    render html: "hello world!"
end
#+end_note
** routes처리(C-c r g r)
 #+begin_tip
root 'application#hello' 
 #+end_tip
#+begin_note
root는 특별한 uri다. 다른 것들은 get post와 URI가 쓰이지만, root는 그런거 없다. 
#+end_note
* Chapter2(micro post)
** web application
#+begin_note
web app을 만든다는 것은 web app을 사용하는 사용자가 있고, 사용자에게 제공하는 contents(service)가 있기 마련이다. 이것을 Resource로 보고 model화 할 수 있다. 여기서 하는 것은 user라는 model과 micropost라는 model이다. 
#+end_note
** rails new toy_app
** bundle install --without production
** user model
 #+begin_tip
 rails g scaffold User name:string email:string
 #+end_tip
#+begin_note
scaffold는 많은 page를 만든다. page별로 수많은 URL을 만들고, page에 접근할 수 있는 action들을 만든다. url과 action은 정해져 있다. Users라는 resource는 


scaffold로 만들때 model명과 model 속성이 들어가는데, model을 만들면서 migration file도 같이 만든다. migration file은 table을 만들거나, sql insert, select문을 만든다. database의 위치나 이름은 rails db:create로 만들고 database.yml에 기술되어 있다.
#+end_note
** micropost model
 #+begin_tip
 rails g scaffold Micropost
 #+end_tip
#+begin_note

#+end_note
